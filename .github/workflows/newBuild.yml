name: app-build-android-windows

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - abi: armeabi-v7a
            platform: android-arm
          - abi: arm64-v8a
            platform: android-arm64
          - abi: x86_64
            platform: android-x64

    steps:
      # 签出代码
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: xiaoyaocz/dart_simple_live
          ref: master
          fetch-depth: 1

      # 下载 Android keystore 到仓库根目录
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      # 创建 key.properties（用相对路径引用 keystore）
      - name: Create key.properties
        run: |
          echo storeFile=../keystore.jks > simple_live_app/android/key.properties
          echo storePassword=${{ secrets.STORE_PASSWORD }} >> simple_live_app/android/key.properties
          echo keyPassword=${{ secrets.KEY_PASSWORD }} >> simple_live_app/android/key.properties
          echo keyAlias=${{ secrets.KEY_ALIAS }} >> simple_live_app/android/key.properties
        shell: bash

      # 升级 Kotlin 版本（支持新依赖）
      - name: Upgrade Kotlin plugin
        run: |
          if [ -f "simple_live_app/android/settings.gradle" ]; then
            sed -i 's/id "org.jetbrains.kotlin.android" version "[^"]*"/id "org.jetbrains.kotlin.android" version "1.9.24"/' simple_live_app/android/settings.gradle
          fi
          if [ -f "simple_live_app/android/build.gradle" ]; then
            sed -i 's/ext.kotlin_version = .*/ext.kotlin_version = "1.9.24"/' simple_live_app/android/build.gradle
          fi
        shell: bash

      # 设置 JAVA 环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "17"

      # 设置 Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      # 缓存 Gradle
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 缓存 Dart/Flutter pub 包
      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            simple_live_app/.dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      # 获取 Flutter 依赖
      - name: Restore packages
        run: |
          cd simple_live_app
          flutter pub get
        shell: bash

      # 按 ABI 打包 APK
      - name: Build APK (${{ matrix.abi }})
        run: |
          cd simple_live_app
          flutter build apk --release --target-platform ${{ matrix.platform }}
        shell: bash

      # 上传对应 ABI APK 到 Artifacts
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.abi }}
          path: simple_live_app/build/app/outputs/flutter-apk/app-${{ matrix.abi }}-release.apk
