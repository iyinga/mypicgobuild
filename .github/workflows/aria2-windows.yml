name: Build Aria2 with PQC Support via CMake

on:
  workflow_dispatch:


jobs:
  build:
    runs-on: windows-2022

    env:
      LIBOQS_DIR: C:\liboqs
      OPENSSL_DIR: C:\openssl-3.5.3
      OQSPROV_DIR: C:\oqs-provider

    steps:
    - name: Checkout aria2
      uses: actions/checkout@v4
      # with:
      #   repository: aria2/aria2
      #   path: aria2

    - name: Set up MSVC environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install dependencies
      run: |
        choco install cmake ninja strawberryperl nasm -y
        echo "C:\Program Files\NASM" | Out-File -Append $env:GITHUB_PATH

    - name: Build liboqs
      run: |
        git clone --recursive https://github.com/open-quantum-safe/liboqs.git
        cd liboqs
        mkdir build && cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{ env.LIBOQS_DIR }} ..
        ninja -j4
        ninja install

    - name: Build OpenSSL 3.5.3
      run: |
        git clone https://github.com/openssl/openssl.git
        cd openssl
        git checkout openssl-3.5.3
        perl Configure VC-WIN64A no-shared --prefix=${{ env.OPENSSL_DIR }}
        nmake
        nmake install_sw

    - name: Build oqs-provider
      run: |
        git clone https://github.com/open-quantum-safe/oqs-provider.git
        cd oqs-provider
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release `
          -DOPENSSL_ROOT_DIR=${{ env.OPENSSL_DIR }} `
          -Dliboqs_DIR=${{ env.LIBOQS_DIR }} `
          -DCMAKE_INSTALL_PREFIX=${{ env.OQSPROV_DIR }} .
        ninja -j4
        ninja install

    # - name: Build aria2 with CMake
    #   run: |
    #     cd aria2
    #     mkdir build && cd build
    #     cmake -G Ninja -DCMAKE_BUILD_TYPE=Release `
    #       -DENABLE_STATIC=yes `
    #       -DENABLE_SHARED=no `
    #       -DENABLE_SSL=yes `
    #       -DOPENSSL_ROOT_DIR=${{ env.OPENSSL_DIR }} `
    #       -DOPENSSL_INCLUDE_DIR=${{ env.OPENSSL_DIR }}/include `
    #       -DOPENSSL_LIBRARIES=${{ env.OPENSSL_DIR }}/lib `
    #       ..
    #     ninja -j4


    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          make
          autoconf
          automake
          libtool
          pkg-config
          gettext-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-openssl
          mingw-w64-x86_64-libxml2
          mingw-w64-x86_64-sqlite3
          mingw-w64-x86_64-libssh2
          mingw-w64-x86_64-zlib
          mingw-w64-x86_64-cppunit
    - name: Clone aria2 source
      shell: msys2 {0}
      run: |
        git clone https://github.com/aria2/aria2.git
        cd aria2
        git submodule update --init
        autoreconf -i
    - name: Configure build
      shell: msys2 {0}
      run: |
        cd aria2
        CFLAGS="-O2 -s -D_FILE_OFFSET_BITS=64" ./configure \
        --host=x86_64-w64-mingw32 \
        --with-openssl=C:/openssl-3.5.3 \
        --without-gnutls \
        --enable-static=yes \
        --enable-shared=no
    - name: Build aria2
      shell: msys2 {0}
      run: |
        cd aria2
        make -j$(nproc)
        strip src/aria2c.exe

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: aria2-windows-openssl
        path: aria2/src/*

    # - name: Upload aria2 binary
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: aria2-pqc-cmake
    #     path: aria2/build/aria2c.exe
